BRAINSTORM COMMAND VALIDATION CHECKLIST
========================================
Date: 2024-07-03
Purpose: Validation checklist for brainstorm command execution
Usage: Compare actual agent execution against these expected steps and outcomes

COMMAND INPUT VALIDATION
=========================
Expected Command: /project:brainstorm a framework of slash commands to create a comprehensive set of tools when working with claude code in daily tasks for a technical director that manages ai pipelines and codebases for our clients

Expected $ARGUMENTS: "a framework of slash commands to create a comprehensive set of tools when working with claude code in daily tasks for a technical director that manages ai pipelines and codebases for our clients"

STEP-BY-STEP EXECUTION VALIDATION
==================================

STEP 1: Enable Extended Thinking Mode
Expected Actions (per 01_brainstorm.md Step 1):
□ Read: docs/modules/thinking-mode.md
□ Activate visible reasoning process
□ Show multi-angle problem analysis
□ Document exploration and decision-making

STEP 2: Research Validation Phase  
Expected Actions (per 01_brainstorm.md Step 2):
□ Read: docs/modules/tool-usage-patterns.md
□ Execute hybrid research validation approach:
  □ Phase 1: Systematic Baseline (Grep → Glob → Read → WebSearch, 1 of each)
  □ Phase 2: Follow-up Research (additional tool calls with documented rationale)
  □ Phase 3: Cross-Reference Validation (compare findings across sources)

Tool Sequence Validation:
□ Phase 1 Baseline: Exactly 1 Grep + 1 Glob + 1 Read + 1 WebSearch executed
□ Phase 2 Extensions: Additional tool calls documented with clear rationale
□ Grep tool used for: related implementations, patterns, existing features
□ Glob tool used for: file pattern matching, relevant files, project structure
□ Read tool used for: architecture analysis, documentation review
□ WebSearch tool used for: best practices, case studies, industry validation

STEP 3: Idea Generation Process
Expected Actions (per 01_brainstorm.md Step 3):
□ Generate diverse solution approaches based on research
□ Consider multiple perspectives: technical, business, user experience
□ Explore conventional and innovative possibilities
□ Evaluate feasibility within current constraints

STEP 4: Evidence-Based Analysis
Expected Actions (per 01_brainstorm.md Step 4):
□ Support each idea with research findings
□ Reference specific examples, case studies, implementations
□ Highlight lessons learned from similar solutions
□ Identify potential risks and mitigation strategies

STEP 5: Structured Presentation
Expected Actions (per 01_brainstorm.md Step 5):
□ Read: docs/modules/template-integration.md
□ Read: docs/modules/output-structure.md
□ Read: docs/templates/brainstorm-output-template.md
□ Follow template structure exactly

STEP 6: Workflow Integration
Expected Actions (per 01_brainstorm.md Step 6):
□ Read: docs/modules/workflow-integration.md (including Practical Implementation)
□ Execute enhanced directory validation process:
  □ Use LS tool to check: docs/outputs/sessions/2024-07-03/
  □ Parse existing workflow directories
  □ Apply topic extraction from $ARGUMENTS
  □ Determine workflow number
  □ Create directory structure
□ Prepare Integration section for /project:feature-proposal

ENHANCED WORKFLOW VALIDATION (NEW)
===================================

Topic Extraction Process:
Input: "a framework of slash commands to create a comprehensive set of tools when working with claude code in daily tasks for a technical director that manages ai pipelines and codebases for our clients"

Expected Process (per workflow-integration.md):
□ Take first 2-3 meaningful words from arguments
□ Convert to lowercase
□ Replace spaces with hyphens
□ Remove special characters
□ Result should be similar to: "command-framework" or "slash-commands"

Directory Validation Process:
□ LS tool used to check: docs/outputs/sessions/2024-07-03/
□ Existing workflow directories identified
□ Next sequential number determined
□ Directory creation documented in output

TEMPLATE COMPLIANCE VALIDATION
===============================

Required Template Sections (per brainstorm-output-template.md):
□ Context
  □ Problem Statement: Clear challenge description
  □ Scope: Boundaries and limitations
  □ Success Criteria: Successful outcome definition

□ Research
  □ Codebase Analysis: Related implementations, current architecture, constraints
  □ External Research: Industry practices, case studies, academic research
  □ Cross-Reference Validation: Common patterns, anti-patterns, sources

□ Analysis
  □ Solution Categories: At least 3 categories with Approach/Evidence/Feasibility/Risks
  □ Comparative Analysis: Strengths/weaknesses, resource requirements, timeline

□ Recommendations
  □ Primary Recommendation: Top approach with justification
  □ Alternative Options: Secondary approaches
  □ Next Steps: Specific actions for feature proposal
  □ Research Gaps: Areas needing investigation

□ Integration
  □ Feature Proposal Preparation: Selected ideas, requirements, stakeholders
  □ Command Transition: Ready for /project:feature-proposal [topic]
  □ Required Inputs: What next command needs
  □ Success Handoff: Validation criteria

MODULE REFERENCE VALIDATION
============================

Template References (per brainstorm-output-template.md):
□ Extended thinking: @docs/modules/thinking-mode.md
□ Tool usage: @docs/modules/tool-usage-patterns.md
□ Output structure: @docs/modules/output-structure.md
□ Workflow integration: @docs/modules/workflow-integration.md

Command References (per 01_brainstorm.md):
□ Step 1: @docs/modules/thinking-mode.md
□ Step 2: @docs/modules/tool-usage-patterns.md
□ Step 5: @docs/modules/template-integration.md + @docs/modules/output-structure.md
□ Step 6: @docs/modules/workflow-integration.md

OUTPUT FILE VALIDATION
=======================

Expected File Structure:
□ Directory: docs/outputs/sessions/2024-07-03/workflow-[NN]-[topic]/
□ Filename: brainstorm-[topic]-2024-07-03.md
□ Example: docs/outputs/sessions/2024-07-03/workflow-01-command-framework/brainstorm-command-framework-2024-07-03.md

File Creation Process:
□ Use Write tool to create file
□ Directory created if it doesn't exist
□ Workflow numbering documented
□ Topic consistency maintained

EXPECTED OUTCOMES VALIDATION
=============================

Per 01_brainstorm.md Expected Outcome section:
□ Visible thinking process throughout exploration
□ Comprehensive research validation from multiple sources
□ Evidence-based solution approaches with supporting rationale
□ Structured presentation ready for feature proposal development
□ Clear recommendations for next steps in the workflow

Content Quality Indicators:
□ Multiple research sources cited and validated
□ At least 3 solution categories explored
□ Feasibility assessments are evidence-based
□ Primary recommendation clearly justified
□ Integration section prepares for next command
□ Research gaps identified for future investigation

INTEGRATION NOTES VALIDATION
=============================

Per 01_brainstorm.md Integration Notes:
□ Command recognized as first step in workflow: brainstorm → feature-proposal → feature-to-prd → feature-planning → task-creation
□ Results inform and structure next development planning phase
□ Integration section includes: "Ready for: /project:feature-proposal [topic]"

VALIDATION CHECKLIST SCORING
=============================

Process Compliance (25 points):
□ All 6 command steps followed (15 pts)
□ Enhanced directory validation completed (5 pts)
□ Topic extraction standardized (5 pts)

Module Integration (20 points):
□ All required modules read (10 pts)
□ Template structure followed (10 pts)

Research Quality (25 points):
□ Phase 1 baseline executed (1 of each tool) (8 pts)
□ Phase 2 extensions properly documented (2 pts)
□ Multiple external sources validated (10 pts)
□ Cross-reference validation completed (5 pts)

Output Quality (30 points):
□ All template sections completed (15 pts)
□ File created in correct location (5 pts)
□ Integration section ready for next command (10 pts)

TOTAL SCORE: ___/100 points
PASS CRITERIA: 80/100 points

CRITICAL FAILURE POINTS
========================
□ Missing LS tool directory validation
□ Phase 1 baseline not executed (missing systematic 1-of-each-tool sequence)
□ Phase 2 extensions without documented rationale
□ Template sections incomplete or missing
□ File created in wrong directory structure
□ Integration section missing next command preparation
□ Topic extraction not following standardization rules
□ Research validation missing external sources
□ Thinking mode not activated or visible